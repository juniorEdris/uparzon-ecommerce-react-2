https://react-bones.com/
https://reactjsexample.com/a-loading-skeleton-component-built-on-react/
https://reactjsexample.com/dead-simple-loading-components-for-react-and-react-native/

CSS==================
  display: -webkit-box; /* OLD - iOS 6-, Safari 3.1-6 */
  display: -moz-box; /* OLD - Firefox 19- (buggy but mostly works) */
  display: -ms-flexbox; /* TWEENER - IE 10 */
  display: -webkit-flex; /* NEW - Chrome */
  display: flex; /* NEW, Spec - Opera 12.1, Firefox 20+ */


  html::-webkit-scrollbar {
  display: none; /* css for scrollbar hide*/
}


Register component ___________________

      {/* <div className="form-group uparzon_input_wrapper">
        <label htmlFor="phone">Phone</label>
        <div className="col-12 p-0 d-flex single_input align-items-center">
          <svg
            xmlns="http://www.w3.org/2000/svg"
            width="36.001"
            height="36.001"
            viewBox="0 0 36.001 36.001">
            <path
              id="Icon_awesome-phone"
              data-name="Icon awesome-phone"
              d="M34.692,1.73,27.38.042a1.7,1.7,0,0,0-1.934.977L22.071,8.895a1.683,1.683,0,0,0,.485,1.969l4.261,3.488A26.059,26.059,0,0,1,14.358,26.81L10.87,22.549A1.686,1.686,0,0,0,8.9,22.064L1.027,25.439A1.708,1.708,0,0,0,.042,27.38L1.73,34.692A1.687,1.687,0,0,0,3.375,36,32.621,32.621,0,0,0,36,3.375,1.685,1.685,0,0,0,34.692,1.73Z"
              transform="translate(0.001 0.001)"
              fill="#13a7b1"
            />
          </svg>
          <input
            type="text"
            className="form-control"
            id="phone"
            value={props.register.phone}
            onChange={handleChange}
          />
          {props.error.registerPassError && (
            <div className="error-handler mb-1">
              <i class="far fa-times-circle"></i>
            </div>
          )}
        </div>
        {props.error.registerPhoneError && (
          <div className="error-handler mb-1">
            <small>{props.error.registerPhoneError}</small>
          </div>
        )}
      </div> */}
      



    // const id = query.get('id');
    // let redirect = '';
    // if (id) {
    //   redirect = `/productdetails?id=${id}`;
    // } else {
    //   redirect = `${router.location.pathname}${
    //     router.location.search && router.location.search
    //   }`;
    // }
    // router.replace(redirect);


    {props.loading
          ?
          <div className="pl-2 pr-2 pb-2">
            <Skeleton width={'100%'} height="100px" className="mb-2" />
            <Skeleton width={'100%'} height="100px" className="mb-2" />
            <Skeleton width={'100%'} height="100px" className="mb-2" />
          </div>
        :